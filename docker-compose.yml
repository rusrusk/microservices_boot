services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#  mysql_order:
#    container_name: mysql_order
#    image: mysql
#    environment:
#      MYSQL_USERNAME: root
#      MYSQL_ROOT_PASSWORD: boot
#      MYSQL_PASSWORD: boot
#      MYSQL_DATABASE: order_service
#    ports:
#      - 3306:3306
#    volumes:
#      - ./mysql_order :/var/lib/mysql
#    restart: unless-stopped
#    expose:
#      - 3306
#    command: -p 3306
#
#  mysql_inventory:
#    container_name: mysql_inventory
#    image: mysql
#    environment:
#      MYSQL_USERNAME: root
#      MYSQL_ROOT_PASSWORD: boot
#      MYSQL_PASSWORD: boot
#      MYSQL_DATABASE: inventory_service
#    ports:
#      - 3307:3307
#    volumes:
#      - ./mysql_inventory :/var/lib/mysql
#    restart: unless-stopped
#    expose:
#      - 3306
#    command: -p 3306
#
#  mongodb:
#    image: mongo:latest
#    container_name: mongodb
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: boot
#      MONGO_INITDB_DATABASE: product_microservice
#    ports:
#      - 27017:27017
#    expose:
#      - 27017
#    volumes:
#      - ./mongo-data:/data/db
#    restart: unless-stopped
#
#  eureka_discovery_service:
#    image: rusrusk/eureka_discovery_service:latest
#    container_name: eureka_discovery_service
#    pull_policy: always
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      -

#networks:
#  db:
#    driver: bridge
#
#volumes:
#  db: